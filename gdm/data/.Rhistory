outDir <- "D:/mLisk/MSCC/clusterMapping/histGraphs/"
##########################################################################
extractByClust <- function(cluster, type, vars, watershed){
############
#cluster <- 10
#type <- "bugs"
#vars <- c("ag_loc", "ph_loc", "for_loc")
#watershed <- "02070004"
############
##list and read in pertinent tables
listPertClust <- list.files(inClustTabDir, pattern=watershed, full.names=T)
listPertEnv <- list.files(inEnvTabDir, pattern=watershed, full.names=T, recursive=T)
pertClustTabs <- lapply(listPertClust, read.csv)
pertEnvTabs <- lapply(listPertEnv, read.csv)
##binds cluster data into one table
fullClustTab <- rbindlist(pertClustTabs)
##binds env data into one table
fullEnvTab <- rbindlist(pertEnvTabs)
##merges cluster and env data
mergeClustEnv <- merge(as.data.frame(fullClustTab), as.data.frame(fullEnvTab), by.x="cellNums", by.y="cellNumber")
##isolate the desired columns to make subsetting faster, adding cluster to it
if(type=="bugs"){
subSetCols <- subset(mergeClustEnv, clusterBugs==cluster, select=c("clusterBugs", vars))
}else if(type=="fish"){
subSetCols <- subset(mergeClustEnv, clusterFish==cluster, select=c("clusterFish", vars))
}
##returns data by watershed
return(subSetCols)
##if needed to summarize data by cluster and watershed
##summarize subset data
#subSummarize <- summarizeData(subSetCols)
##return summarized data
#return(subSummarize)
}
##########################################################################
summarizeData <- function(subSetTab, clust, outLoc){
############
#subSetTab <- as.data.frame(fullFishClust1)
#clust <- "1"
#outLoc <- "D:/mLisk/MSCC/clusterMapping/histGraphs/"
############
sumDataList <- list()
##extract data
for(n in 2:ncol(subSetTab)){
########
#n <- 2
########
dat <- subSetTab[,n]
if(colnames(subSetTab[n])=="sat_acc"){
dat <- dat[dat>=100]
}
q5Dat <- quantile(dat, probs=0.05)
q95Dat <- quantile(dat, probs=0.95)
medDat <- median(dat)
matDat <- matrix(c(q5Dat, q95Dat, medDat), nrow=3, ncol=1)
##plots dat into a histogram
##comment out when not needed
tiff(paste(outLoc, "fishCluster", clust, colnames(subSetTab)[n], "Hist.tif", sep=""), compression="lzw", width=750, height=750)
hist(dat, main=paste("cluster", clust, colnames(subSetTab)[n], "Hist", sep=""), breaks=1000)
dev.off()
sumDataList[[n-1]] <- matDat
}
##shape data into matrix
##not using rbindlist here because want to keep it as a matrix object
sumDataMat <- matrix(unlist(sumDataList), ncol=length(sumDataList), byrow=F)
colnames(sumDataMat) <- colnames(subSetTab)[2:ncol(subSetTab)]
rownames(sumDataMat) <- c("5th quantile", "95th quantile", "median")
##return data
return(sumDataMat)
}
##########################################################################
fishClusters <- 1:22
bugsClusters <- 1:29
watersheds <- c("02050306", "02060003", "02060004", "02060006", "02070002", "02070003", "02070004", "02070008", "02070009", "02070010", "02070011", "05020006")
variables <- c("sat_acc", "for_acc", "isa_acc", "ag_acc", "wet_acc")
summarizeData <- function(subSetTab, clust, outLoc){
############
#subSetTab <- as.data.frame(fullFishClust1)
#clust <- "1"
#outLoc <- "D:/mLisk/MSCC/clusterMapping/histGraphs/"
############
sumDataList <- list()
##extract data
for(n in 2:ncol(subSetTab)){
########
#n <- 2
########
dat <- subSetTab[,n]
if(colnames(subSetTab[n])=="sat_acc"){
dat <- dat[dat>=100]
}
q5Dat <- quantile(dat, probs=0.05)
q95Dat <- quantile(dat, probs=0.95)
medDat <- median(dat)
matDat <- matrix(c(q5Dat, q95Dat, medDat), nrow=3, ncol=1)
##plots dat into a histogram
##comment out when not needed
tiff(paste(outLoc, "bugsCluster", clust, colnames(subSetTab)[n], "Hist.tif", sep=""), compression="lzw", width=750, height=750)
hist(dat, main=paste("cluster", clust, colnames(subSetTab)[n], "Hist", sep=""), breaks=1000)
dev.off()
sumDataList[[n-1]] <- matDat
}
##shape data into matrix
##not using rbindlist here because want to keep it as a matrix object
sumDataMat <- matrix(unlist(sumDataList), ncol=length(sumDataList), byrow=F)
colnames(sumDataMat) <- colnames(subSetTab)[2:ncol(subSetTab)]
rownames(sumDataMat) <- c("5th quantile", "95th quantile", "median")
##return data
return(sumDataMat)
}
bugsClust1 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=1, v=variables)
fullBugsClust1 <- rbindlist(bugsClust1)
clust1SumTab <- summarizeData(as.data.frame(fullBugsClust1), "1", outDir)
bugsClust2 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=2, v=variables)
fullBugsClust2 <- rbindlist(bugsClust2)
clust2SumTab <- summarizeData(as.data.frame(fullBugsClust2), "2", outDir)
write.csv(clust1SumTab, paste(outDir, "bugsClust1Stats.csv", sep=""), )
write.csv(clust2SumTab, paste(outDir, "bugsClust2Stats.csv", sep=""), )
bugsClust3 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=3, v=variables)
fullBugsClust3 <- rbindlist(bugsClust2)
clust3SumTab <- summarizeData(as.data.frame(fullBugsClust3), "3", outDir)
write.csv(clust3SumTab, paste(outDir, "bugsClust3Stats.csv", sep=""), )
bugsClust4 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=4, v=variables)
fullBugsClust4 <- rbindlist(bugsClust4)
clust4SumTab <- summarizeData(as.data.frame(fullBugsClust2), "4", outDir)
write.csv(clust4SumTab, paste(outDir, "bugsClust4Stats.csv", sep=""), )
bugsClust5 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=5, v=variables)
fullBugsClust5 <- rbindlist(bugsClust5)
clust5SumTab <- summarizeData(as.data.frame(fullBugsClust5), "5", outDir)
write.csv(clust5SumTab, paste(outDir, "bugsClust5Stats.csv", sep=""), )
##bugscluster6
bugsClust6 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=6, v=variables)
fullBugsClust6 <- rbindlist(bugsClust6)
clust6SumTab <- summarizeData(as.data.frame(fullBugsClust6), "6", outDir)
write.csv(clust6SumTab, paste(outDir, "bugsClust6Stats.csv", sep=""), )
##bugscluster7
bugsClust7 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=7, v=variables)
fullBugsClust7 <- rbindlist(bugsClust7)
clust7SumTab <- summarizeData(as.data.frame(fullBugsClust7), "7", outDir)
write.csv(clust7SumTab, paste(outDir, "bugsClust7Stats.csv", sep=""), )
##bugscluster8
bugsClust8 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=8, v=variables)
fullBugsClust8 <- rbindlist(bugsClust8)
clust8SumTab <- summarizeData(as.data.frame(fullBugsClust8), "8", outDir)
write.csv(clust8SumTab, paste(outDir, "bugsClust8Stats.csv", sep=""), )
##bugscluster9
bugsClust9 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=9, v=variables)
fullBugsClust9 <- rbindlist(bugsClust9)
clust9SumTab <- summarizeData(as.data.frame(fullBugsClust9), "9", outDir)
write.csv(clust9SumTab, paste(outDir, "bugsClust9Stats.csv", sep=""), )
##bugscluster10
bugsClust10 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=10, v=variables)
fullBugsClust10 <- rbindlist(bugsClust10)
clust10SumTab <- summarizeData(as.data.frame(fullBugsClust10), "10", outDir)
write.csv(clust10SumTab, paste(outDir, "bugsClust10Stats.csv", sep=""), )
##bugscluster11
bugsClust11 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=11, v=variables)
fullBugsClust11 <- rbindlist(bugsClust11)
clust11SumTab <- summarizeData(as.data.frame(fullBugsClust11), "11", outDir)
write.csv(clust11SumTab, paste(outDir, "bugsClust11Stats.csv", sep=""), )
##bugscluster12
bugsClust12 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=12, v=variables)
fullBugsClust12 <- rbindlist(bugsClust12)
clust12SumTab <- summarizeData(as.data.frame(fullBugsClust12), "12", outDir)
write.csv(clust12SumTab, paste(outDir, "bugsClust12Stats.csv", sep=""), )
##bugscluster13
bugsClust13 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=13, v=variables)
fullBugsClust13 <- rbindlist(bugsClust13)
clust13SumTab <- summarizeData(as.data.frame(fullBugsClust13), "13", outDir)
write.csv(clust13SumTab, paste(outDir, "bugsClust13Stats.csv", sep=""), )
##bugscluster14
bugsClust14 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=14, v=variables)
fullBugsClust14 <- rbindlist(bugsClust14)
clust14SumTab <- summarizeData(as.data.frame(fullBugsClust14), "14", outDir)
write.csv(clust14SumTab, paste(outDir, "bugsClust14Stats.csv", sep=""), )
##bugscluster15
bugsClust15 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=15, v=variables)
fullBugsClust15 <- rbindlist(bugsClust15)
clust15SumTab <- summarizeData(as.data.frame(fullBugsClust15), "15", outDir)
write.csv(clust15SumTab, paste(outDir, "bugsClust15Stats.csv", sep=""), )
##bugscluster16
bugsClust16 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=16, v=variables)
fullBugsClust16 <- rbindlist(bugsClust16)
clust16SumTab <- summarizeData(as.data.frame(fullBugsClust16), "16", outDir)
write.csv(clust16SumTab, paste(outDir, "bugsClust16Stats.csv", sep=""), )
##bugscluster17
bugsClust17 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=17, v=variables)
fullBugsClust17 <- rbindlist(bugsClust17)
clust17SumTab <- summarizeData(as.data.frame(fullBugsClust17), "17", outDir)
write.csv(clust17SumTab, paste(outDir, "bugsClust17Stats.csv", sep=""), )
##bugscluster18
bugsClust18 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=18, v=variables)
fullBugsClust18 <- rbindlist(bugsClust18)
clust18SumTab <- summarizeData(as.data.frame(fullBugsClust18), "18", outDir)
write.csv(clust18SumTab, paste(outDir, "bugsClust18Stats.csv", sep=""), )
##bugscluster19
bugsClust19 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=19, v=variables)
fullBugsClust19 <- rbindlist(bugsClust19)
clust19SumTab <- summarizeData(as.data.frame(fullBugsClust19), "19", outDir)
write.csv(clust19SumTab, paste(outDir, "bugsClust19Stats.csv", sep=""), )
##bugscluster20
bugsClust20 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=20, v=variables)
fullBugsClust20 <- rbindlist(bugsClust20)
clust20SumTab <- summarizeData(as.data.frame(fullBugsClust20), "20", outDir)
write.csv(clust20SumTab, paste(outDir, "bugsClust20Stats.csv", sep=""), )
##bugscluster21
bugsClust21 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=21, v=variables)
fullBugsClust21 <- rbindlist(bugsClust21)
clust21SumTab <- summarizeData(as.data.frame(fullBugsClust21), "21", outDir)
write.csv(clust21SumTab, paste(outDir, "bugsClust21Stats.csv", sep=""), )
##bugscluster22
bugsClust22 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=22, v=variables)
fullBugsClust22 <- rbindlist(bugsClust22)
clust22SumTab <- summarizeData(as.data.frame(fullBugsClust22), "22", outDir)
write.csv(clust22SumTab, paste(outDir, "bugsClust22Stats.csv", sep=""), )
##bugscluster23
bugsClust23 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=23, v=variables)
fullBugsClust23 <- rbindlist(bugsClust23)
clust23SumTab <- summarizeData(as.data.frame(fullBugsClust23), "23", outDir)
write.csv(clust23SumTab, paste(outDir, "bugsClust23Stats.csv", sep=""), )
##bugscluster24
bugsClust24 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=24, v=variables)
fullBugsClust24 <- rbindlist(bugsClust24)
clust24SumTab <- summarizeData(as.data.frame(fullBugsClust24), "24", outDir)
write.csv(clust24SumTab, paste(outDir, "bugsClust24Stats.csv", sep=""), )
##bugscluster25
bugsClust25 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=25, v=variables)
fullBugsClust25 <- rbindlist(bugsClust25)
clust25SumTab <- summarizeData(as.data.frame(fullBugsClust25), "25", outDir)
write.csv(clust25SumTab, paste(outDir, "bugsClust25Stats.csv", sep=""), )
##bugscluster26
bugsClust26 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=26, v=variables)
fullBugsClust26 <- rbindlist(bugsClust26)
clust26SumTab <- summarizeData(as.data.frame(fullBugsClust26), "26", outDir)
write.csv(clust26SumTab, paste(outDir, "bugsClust26Stats.csv", sep=""), )
##bugscluster27
bugsClust27 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=27, v=variables)
fullBugsClust27 <- rbindlist(bugsClust27)
clust27SumTab <- summarizeData(as.data.frame(fullBugsClust27), "27", outDir)
write.csv(clust27SumTab, paste(outDir, "bugsClust27Stats.csv", sep=""), )
##bugscluster28
bugsClust28 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=28, v=variables)
fullBugsClust28 <- rbindlist(bugsClust28)
clust28SumTab <- summarizeData(as.data.frame(fullBugsClust28), "28", outDir)
write.csv(clust28SumTab, paste(outDir, "bugsClust28Stats.csv", sep=""), )
##bugscluster29
bugsClust29 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=29, v=variables)
fullBugsClust29 <- rbindlist(bugsClust29)
clust29SumTab <- summarizeData(as.data.frame(fullBugsClust29), "29", outDir)
write.csv(clust29SumTab, paste(outDir, "bugsClust29Stats.csv", sep=""), )
library(data.table)
##script to extract environmental data from watersheds by cluster
inClustTabDir <- "Z:/MSCC_streams/clusterMapping/"
inEnvTabDir <- "Z:/MSCC_streams/rasterData_asTables/fullTables4mapping/"
outDir <- "D:/mLisk/MSCC/clusterMapping/histGraphs/"
##########################################################################
extractByClust <- function(cluster, type, vars, watershed){
############
#cluster <- 10
#type <- "bugs"
#vars <- c("ag_loc", "ph_loc", "for_loc")
#watershed <- "02070004"
############
##list and read in pertinent tables
listPertClust <- list.files(inClustTabDir, pattern=watershed, full.names=T)
listPertEnv <- list.files(inEnvTabDir, pattern=watershed, full.names=T, recursive=T)
pertClustTabs <- lapply(listPertClust, read.csv)
pertEnvTabs <- lapply(listPertEnv, read.csv)
##binds cluster data into one table
fullClustTab <- rbindlist(pertClustTabs)
##binds env data into one table
fullEnvTab <- rbindlist(pertEnvTabs)
##merges cluster and env data
mergeClustEnv <- merge(as.data.frame(fullClustTab), as.data.frame(fullEnvTab), by.x="cellNums", by.y="cellNumber")
##isolate the desired columns to make subsetting faster, adding cluster to it
if(type=="bugs"){
subSetCols <- subset(mergeClustEnv, clusterBugs==cluster, select=c("clusterBugs", vars))
}else if(type=="fish"){
subSetCols <- subset(mergeClustEnv, clusterFish==cluster, select=c("clusterFish", vars))
}
##returns data by watershed
return(subSetCols)
##if needed to summarize data by cluster and watershed
##summarize subset data
#subSummarize <- summarizeData(subSetCols)
##return summarized data
#return(subSummarize)
}
##########################################################################
summarizeData <- function(subSetTab, clust, outLoc){
############
#subSetTab <- as.data.frame(fullFishClust1)
#clust <- "1"
#outLoc <- "D:/mLisk/MSCC/clusterMapping/histGraphs/"
############
sumDataList <- list()
##extract data
for(n in 2:ncol(subSetTab)){
########
#n <- 2
########
dat <- subSetTab[,n]
if(colnames(subSetTab[n])=="sat_acc"){
dat <- dat[dat>=100]
}
q5Dat <- quantile(dat, probs=0.05)
q95Dat <- quantile(dat, probs=0.95)
medDat <- median(dat)
matDat <- matrix(c(q5Dat, q95Dat, medDat), nrow=3, ncol=1)
##plots dat into a histogram
##comment out when not needed
tiff(paste(outLoc, "bugsCluster", clust, colnames(subSetTab)[n], "Hist.tif", sep=""), compression="lzw", width=750, height=750)
hist(dat, main=paste("cluster", clust, colnames(subSetTab)[n], "Hist", sep=""), breaks=1000)
dev.off()
sumDataList[[n-1]] <- matDat
}
##shape data into matrix
##not using rbindlist here because want to keep it as a matrix object
sumDataMat <- matrix(unlist(sumDataList), ncol=length(sumDataList), byrow=F)
colnames(sumDataMat) <- colnames(subSetTab)[2:ncol(subSetTab)]
rownames(sumDataMat) <- c("5th quantile", "95th quantile", "median")
##return data
return(sumDataMat)
}
##########################################################################
##lists the needed variables
fishClusters <- 1:22
bugsClusters <- 1:29
watersheds <- c("02050306", "02060003", "02060004", "02060006", "02070002", "02070003", "02070004", "02070008", "02070009", "02070010", "02070011", "05020006")
variables <- c("sat_acc", "for_acc", "isa_acc", "ag_acc", "wet_acc")
##bugscluster3
bugsClust3 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=3, v=variables)
fullBugsClust3 <- rbindlist(bugsClust3)
clust3SumTab <- summarizeData(as.data.frame(fullBugsClust3), "3", outDir)
write.csv(clust3SumTab, paste(outDir, "bugsClust3Stats.csv", sep=""), )
##bugscluster4
bugsClust4 <- lapply(watersheds, function(shed, t, v, c){extractByClust(c,t,v,shed)}, t="bugs", c=4, v=variables)
fullBugsClust4 <- rbindlist(bugsClust4)
clust4SumTab <- summarizeData(as.data.frame(fullBugsClust4), "4", outDir)
write.csv(clust4SumTab, paste(outDir, "bugsClust4Stats.csv", sep=""), )
library(raster)
library(plyr)
library(vegan)
#library(gdm)
source("C:/Users/mlisk/Documents/GitHub/GDM4R/GDM_Table_Funcs.R")
source("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/R/GDM_Table_Funcs.R")
setwd("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/")
load("gdm.RData")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
exFormat1b = gdm.formatsitepair(testData1b, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnvRast)
source("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/R/GDM_Table_Funcs.R")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
exFormat1b = gdm.formatsitepair(testData1b, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnvRast)
exFormat2b = gdm.formatsitepair(testData2b, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", siteColumn="site", predData=testEnvRast, abundance=T)
library(reshape2)
exFormat1b = gdm.formatsitepair(testData1b, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnvRast)
View(exFormat1b)
exFormat2a = gdm.formatsitepair(testData2a, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", predData=testEnvRast, abundance=T)
exFormat2b = gdm.formatsitepair(testData2b, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", siteColumn="site", predData=testEnvRast, abundance=T)
exFormat3 = gdm.formatsitepair(testData3, 3, XColumn="LONG", YColumn="LAT", predData=testEnv3)
library(raster)
testEnvRast <- stack("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/samprast1.grd", "C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/samprast2.grd")
#testData1a <- read.table(system.file("external/sampData1a.csv", package="gdm"), sep=",")
testData1a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/sampData1a.csv")
##site-pair table with coordinates
#testData1b <- read.table(system.file("external/sampData1b.csv", package="gdm"), sep=",")
testData1b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/sampData1b.csv")
##site-pair environmental table
#testEnv1 <- read.table(system.file("external/sampEnvData1.csv", package="gdm"), sep=",")
testEnv1 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/sampEnvData1.csv")
testData1a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1a.csv")
testData1b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1b.csv")
##site-pair environmental table
#testEnv1 <- read.table(system.file("external/sampEnvData1.csv", package="gdm"), sep=",")
testEnv1 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData1.csv")
#testData2a <- read.table(system.file("external/sampData2a.csv", package="gdm"), sep=",")
testData2a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2a.csv")
##xy spp list table with site
#testData2b <- read.table(system.file("external/sampData2b.csv", package="gdm"), sep=",")
testData2b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2b.csv")
testData3 <- read.table("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/samp_spp_ex3.txt")
##env data for ex3
#testEnv3 <- read.table(system.file("external/sampEnvData3.csv", package="gdm"), sep=",")
testEnv3 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData3.csv")
?save.image
save.image("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/gdm.RData")
source("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/R/GDM_Table_Funcs.R")
setwd("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/")
load("gdm.RData")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
testData1a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1a.csv")
##site-pair table with coordinates
#testData1b <- read.table(system.file("external/sampData1b.csv", package="gdm"), sep=",")
testData1b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1b.csv")
##site-pair environmental table
#testEnv1 <- read.table(system.file("external/sampEnvData1.csv", package="gdm"), sep=",")
testEnv1 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData1.csv")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
exFormat1b = gdm.formatsitepair(testData1b, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnvRast)
testData2a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2a.csv")
##xy spp list table with site
#testData2b <- read.table(system.file("external/sampData2b.csv", package="gdm"), sep=",")
testData2b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2b.csv")
exFormat2a = gdm.formatsitepair(testData2a, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", predData=testEnvRast, abundance=T)
exFormat2b = gdm.formatsitepair(testData2b, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", siteColumn="site", predData=testEnvRast, abundance=T)
testData3 <- read.table("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/samp_spp_ex3.txt")
##env data for ex3
#testEnv3 <- read.table(system.file("external/sampEnvData3.csv", package="gdm"), sep=",")
testEnv3 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData3.csv")
exFormat3 = gdm.formatsitepair(testData3, 3, XColumn="LONG", YColumn="LAT", predData=testEnv3)
testData1a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1a.csv")
##site-pair table with coordinates
#testData1b <- read.table(system.file("external/sampData1b.csv", package="gdm"), sep=",")
testData1b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1b.csv")
##site-pair environmental table
#testEnv1 <- read.table(system.file("external/sampEnvData1.csv", package="gdm"), sep=",")
testEnv1 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData1.csv")
testEnvRast <- stack("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/samprast1.grd", "C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/samprast2.grd")
testData2a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2a.csv")
##xy spp list table with site
#testData2b <- read.table(system.file("external/sampData2b.csv", package="gdm"), sep=",")
testData2b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2b.csv")
testData3 <- read.table("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/samp_spp_ex3.txt")
##env data for ex3
#testEnv3 <- read.table(system.file("external/sampEnvData3.csv", package="gdm"), sep=",")
testEnv3 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData3.csv")
save.image("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/gdm.RData")
setwd("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/")
load("gdm.RData")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
source("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/R/GDM_Table_Funcs.R")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
exFormat1b = gdm.formatsitepair(testData1b, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnvRast)
exFormat2a = gdm.formatsitepair(testData2a, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", predData=testEnvRast, abundance=T)
exFormat2b = gdm.formatsitepair(testData2b, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", siteColumn="site", predData=testEnvRast, abundance=T)
exFormat3 = gdm.formatsitepair(testData3, 3, XColumn="LONG", YColumn="LAT", predData=testEnv3)
sitePairTab <- gdm.formatsitepair(testData2a, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", siteColumn="site", predData=testEnvRast, abundance=T)
sitePairTab <- gdm.formatsitepair(testData2a, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", predData=testEnvRast, abundance=T)
gdmOb = gdm(sitePairTab, geo=T)
sitePairTab <- gdm.formatsitepair(testData2a, 2, XColumn="x_coord", YColumn="y_coord", sppColumn="variable", abundColumn="value", predData=testEnvRast, abundance=T)
gdmOb = gdm(sitePairTab, geo=T)
library(gdm)
gdmOb = gdm(sitePairTab, geo=T)
plot.gdm(gdmOb)
predData = predict(gdmOb, testEnvRast)
predData = predict.gdm(gdmOb, testEnvRast)
View(sitePairTab)
gdmOb
summary.gdm(gdmOb)
predData = predict.gdm(gdmOb, sitePairTab)
#testEnvRast <- stack(system.file("external/samprast1.grd", package="gdm"), system.file("external/samprast2.grd", package="gdm"))
testEnvRast <- stack("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/samprast1.grd", "C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/samprast2.grd")
#########table type 1
##site-pair table without coordinates
#testData1a <- read.table(system.file("external/sampData1a.csv", package="gdm"), sep=",")
testData1a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1a.csv")
##site-pair table with coordinates
#testData1b <- read.table(system.file("external/sampData1b.csv", package="gdm"), sep=",")
testData1b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1b.csv")
##site-pair environmental table
#testEnv1 <- read.table(system.file("external/sampEnvData1.csv", package="gdm"), sep=",")
testEnv1 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData1.csv")
testData2a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2a.csv")
##xy spp list table with site
#testData2b <- read.table(system.file("external/sampData2b.csv", package="gdm"), sep=",")
testData2b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2b.csv")
testData3 <- read.table("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/samp_spp_ex3.txt")
##env data for ex3
#testEnv3 <- read.table(system.file("external/sampEnvData3.csv", package="gdm"), sep=",")
testEnv3 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData3.csv")
save.image("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/gdm.RData")
setwd("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/")
load("gdm.RData")
exFormat1a = gdm.formatsitepair(testData1a, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
exFormat1b = gdm.formatsitepair(testData1b, 1, abundance=T, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnvRast)
gdmObs = gdm(sitePairTab, geo=T)
gdmObs = gdm(exFormat1a, geo=T)
plot.gdm(gdmObs)
View(testEnv1)
install.packages("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm_test_10_31_14.tar.gz", type="source", repos=NULL)
library(gdm)
load(system.file("data/gdm.RData", package="gdm"))
exFormat1a <- gdm.formatsitepair(testData1a, 1, abundance=TRUE, siteColumn="site", XColumn="x_coord", YColumn="y_coord", predData=testEnv1)
testData1a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1a.csv")
##site-pair table with coordinates
#testData1b <- read.table(system.file("external/sampData1b.csv", package="gdm"), sep=",")
testData1b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData1b.csv")
##site-pair environmental table
#testEnv1 <- read.table(system.file("external/sampEnvData1.csv", package="gdm"), sep=",")
testEnv1 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData1.csv")
testData2a <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2a.csv")
##xy spp list table with site
#testData2b <- read.table(system.file("external/sampData2b.csv", package="gdm"), sep=",")
testData2b <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampData2b.csv")
testData3 <- read.table("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/samp_spp_ex3.txt")
##env data for ex3
#testEnv3 <- read.table(system.file("external/sampEnvData3.csv", package="gdm"), sep=",")
testEnv3 <- read.csv("C:/Users/mlisk/Documents/testPackageBuildGDM/exampleData/sampEnvData3.csv")
save.image("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/gdm.RData")
?raster
logo <- raster(system.file("external/rlogo.grd", package="raster"))
logo
?dput
r1 <- raster(system.file("data/samprast1.grd", package="gdm"))
r2 <- raster(system.file("data/samprast2.grd", package="gdm"))
dput(r1, "C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/testRast")
dget("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/testRast")
?dget
library(raster)
r1 <- raster(system.file("data/samprast1.grd", package="gdm"))
dput(r1, "C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/testRast.txt")
dget("C:/Users/mlisk/Documents/testPackageBuildGDM/gdm/data/testRast.txt")
